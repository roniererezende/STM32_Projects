/*
 * bsp.h
 *
 *  Created on: Oct 23, 2025
 *      Author: Roniere_Rezende
 */

#ifndef INC_BSP_H_
#define INC_BSP_H_

/* INCLUDES */
#include "main.h"
#include "string.h"

#include "interrupcao.h"
#include "can.h"
#include "led.h"

#include <stdbool.h>


/* STRUCTURES */
typedef enum
{
	bsp_init = 0,
	bsp_idle,
	bsp_reception_can,
	bsp_reception_ready,
	bsp_transmission_json
}bsp_state_e;

typedef struct
{
	uint16_t altura;       // 5635;
	uint16_t peso;         // 1257;
	uint8_t  status_flags; // 0x06;

	uint8_t  tensao;        // 48;
	uint32_t horimetro;    // 10850;
}data_s;

typedef struct
{
	bsp_state_e state;

	led_s led;

	data_s data;
}bsp_s;

/* VARIABLES */
extern TIM_HandleTypeDef htim1;
extern TIM_HandleTypeDef htim3;

extern bsp_s bsp;

/* SIMULATION DATA */
extern uint16_t altura;
extern uint16_t peso;
extern uint8_t  status_flags;

extern uint8_t  volts;
extern uint8_t  valor;
extern uint32_t horimetro;

extern uint8_t payload_id_can_0x100[8];
extern uint8_t payload_id_can_0x200[8];


/* FUNCTION PROTOTYPES */
void BSP_init(void);
void bsp_main(void);

#endif /* INC_BSP_H_ */
