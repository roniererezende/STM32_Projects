/*
 * interrupcao.c
 *
 *  Created on: Oct 23, 2025
 *      Author: Roniere_Rezende
 */
#include "bsp.h"

uint16_t count_millissecond_tim1 = 0;
uint16_t count_millissecond_tim3 = 0;
uint16_t count_second_tim3 = 0;
uint16_t count_minute_tim3 = 0;

// Função de Callback da Interrupção
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
	static uint8_t packet_num = 0;
	// Verifica se a interrupção é do TIM1
	if (htim->Instance == TIM1)
	{
		count_millissecond_tim1++;

		// A cada 2 segundos é habilitado o estado "run" para que se seja realizado a transmissão dos dados via CAN
		if (count_millissecond_tim1 > 1999)
		{
			can_simulation_transmition(packet_num);

			bsp.state = bsp_run;
			count_millissecond_tim1 = 0;

			if(packet_num)
			{
				packet_num = 0;
			}

		}
	}

	// Verifica se a interrupção é do TIM1
	if (htim->Instance == TIM3)
	{
		count_millissecond_tim3++;

		if(count_millissecond_tim3 > 999)
		{
			count_second_tim3++;
			count_millissecond_tim3 = 0;

			if(count_second_tim3 > 59)
			{
				count_minute_tim3++;

				if(count_minute_tim3 > 5)
				{

				}
			}
		}
	}
}
